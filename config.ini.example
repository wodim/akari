[akari]
; You should generally not touch these unless you're creating your own masks.
frames = assets/akari/
caption_type = akari

; Only use the X most relevant results in all image searches.
limit_results = 5

[twitter]
; These need to be generated for the Twitter bot to work. You can use an app of
; yours, or (recommended) use the tokens for any of the official apps.
; The cron tasks that deal with followers will probably hit rate limits if you
; don't use the tokens of an official app such as TweetDeck.
; Consumer tokens for official apps can be found here:
; https://gist.github.com/shobotch/5160017
; A guide to generate the access tokens can be found here:
; http://blog.vortigaunt.net/authenticating-an-app-and-obtaining-its-access-token-pair-with-tweepy/
consumer_key =
consumer_secret =
access_token =
access_token_secret =

; Only tweets sent to the bot using one of these clients will be serviced or
; added to the pending.txt file. The whitelist is used to prevent abuse, and
; it comes with a list of "trustable" clients by default. To disable the
; whitelist, you can leave it empty.
sources_whitelist = Twitter for Android, Twitter for iPad, Twitter for iPhone, Twitter for Mac, Twitter for Windows, Twitter for Windows Phone, Twitter Web Client, TweetDeck, Tweetbot for iΟS, Tweetbot for Mac, Mobile Web, Mobile Web (M2), Mobile Web (M5)

; List of terms that will make the cron job ignore a tweet. For example, for some time
; people spammed tweets about famous.af all day, so I added "@FAMOUSdotAF" to the
; blacklist and those tweets stopped appearing. These are regular expressions,
; so remember to escape characters if necessary.
text_blacklist = @FAMOUSdotAF, \bfavs?\b

; These are the images sent to users when there are no results or there has been
; a problem generating a captioned gif.
no_results_image = assets/no-results.gif
error_image = assets/out-of-service.gif

; Completely override the scoring algorithm of akari_cron() and publish this
; instead.
; cron_override =

; This tweet id will be retweeted when tasks.retweet_promo_tweet() is called.
; If there's a previous retweet, it'll be undone first.
; promo_tweet_id =

; Every X minutes, a caption will be generated for the first person who tweets
; anything.
lucky_interval = 3

; List of terms that will make the bot remove a requested caption. For that
; caption to be removed, the user who requested the removal has to be the user
; who requested the caption. These are regular expressions.
delete_triggers = \b(delete?|remove) (th|d)is\b

; If this is on, users can provide images in tweets and those will be used,
; instead of a regular Google search, to generate GIFs.
user_images = yes

; If this is off, users can't request captions. i.e. only cron posts will work.
; twitter_bot.py must be running anyway to get all tweets.
user_requests = yes

; Requests in this blacklist won't be answered by the bot.
request_blacklist = \bnigger, \bk[i1]k[e3], \bf[a4]gg[o0e3]t

; If this is defined and the one-minute load average of the system is greater
; than this, captions generated by the Twitter bot will be static even if there's
; a list of masks. Only the first image of the list will be used.
; load_avg_still =

; When the bot posts too many tweets, it gets rate limited. To reflect this,
; the bio of the bot is changed automatically to warn the users of it.
; When the rate limit is over, the bio is changed back.
; There's no way of knowing what the limits are, so the bio only changes when
; the bot fails to post and then the change is reverted when the bot succeeds
; to post again. The length limit of this field is 160 characters.
bio_ok = 「あかり大好き」 Mention me and I’ll make a GIF for you. To have something removed, reply with “delete this”.
bio_ratelimit = WARNING: the bot is rate limited and may be unable to respond. If that happens, just wait a few minutes. To have something removed, reply with “delete this”.

; Twitter exposes the language of all users. Tweets written by users who have
; configured Twitter in languages other than the ones specified below won't
; be stored in the pending.txt file and will therefore not be eligible for cron
cron_lang_whitelist = en

; Apply a penalty to quoted tweets
cron_filter_quotes = no

; Whether tweets with generated captions contain text in the tweet body.
; This includes captions requested by users and captions generated by cron.
text_in_status = yes

[telegram]
; You can talk to the BotFather on Telegram to create an account for the bot.
; Once you've created it, you'll receive a token, which is what you need to put
; there. This process is absurdly simple, at least compared to what you need to
; do to make the Twitter bot work. https://telegram.me/BotFather
; token =

; If a Redis server is up, the amount of captions that will be generated by the
; Telegram bot for each user will be rate limited. The rate limit as of now is
; 50 captions per 10 minutes. This config key is a list of users that are exempt
; of any rate limits. You need the chat id of that user. There are several ways
; of obtaining it; you can launch the bot, talk to it, and read the log.
; rate_limit_exemptions =

; The user name of your bot.
username =

; The real name of your bot.
realname = Akari Bot

; The Twitter URL of your bot, if you have any.
; twitter_url =

[image_search]
; List of domains that are ignored when searching for images.
banned_sources = desmotivaciones.es, akifrases.com, cartelescreativos.com, izquotes.com

; User agent used to search for and download images.
user_agent = Mozilla/5.0 (Windows NT 6.1; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/63.0.3239.132 Safari/537.36

; If this is enabled, all image searches will be done using a random term from
; this list instead of whatever string was specified.
; override =

[mail]
; If the Twitter bot can't connect to Twitter, you will receive a mail every
; two hours telling you of it. For that to work you need to have 1) a Redis
; server working and 2) a Mailgun account configured right here.
; "from" can be whatever, as long as it's part of mailgun_domain.
enabled = no
from =
to =
mailgun_key =
mailgun_domain =
